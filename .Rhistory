library(roxygen2)
roxygenize("D:/R/ACE.CoCo") # create .Rd and NAMESPACE
# finish description and Rd, then run
library(devtools)
build_manual("D:/R/ACE.CoCo") # create Reference manual
library(ACE.CoCo)
library(ACE.CoCo)
library(mvtnorm); library(quantreg)
p <- 200; n <- 100; h <- 3 # the number of variables, samples and factors
berlii <- rbinom(p, 1, 0.2) # 1 means the variable is non-null and 0 means it is null.
index0 <- which(berlii == 0); index1 <- which(berlii == 1)
mu <- matrix(rep(0, 1*p), nrow=p)
mu[index1] <- runif(length(index1), min=0.4, max=0.7) # expectation of data
B <- matrix(runif(h*p, min=-1, max=1), nrow=p) # factor loading matrix
t_error <- t(rmvt(n, sigma = diag(p), df = 10)) # error term followed t-distribution
f <- t(rmvt(n, diag(h), df = 4))/sqrt(4/(4-2)) # factor followed t-distribution
Y <- mu %*% matrix(rep(1, n*1), nrow=1) + B %*% f + t_error # data
res <- ACE(Z = Y, H0_indicator = berlii, gama = 0.05)
res$FDP # true FDP
res$Power # power
library(roxygen2)
roxygenize("D:/R/ACE.CoCo") # create .Rd and NAMESPACE
# finish description and Rd, then run
library(devtools)
build_manual("D:/R/ACE.CoCo") # create Reference manual
library(ACE.CoCo)
library(ACE.CoCo)
library(ACE.CoCo)
library(ACE.CoCo)
# finish description and Rd, then run
library(devtools)
build_manual("D:/R/ACE.CoCo") # create Reference manual
install.packages("ACE.CoCo")
rm(list = ls())
p <- 2000; n <- 600 ; K <- 3; lb <- 0.4; ub <- 0.4; v <- 4
PP <- 0.2
gama<-0.05
library(MASS); library(mvtnorm); source("ACE.R"); library(quantreg); library(ACE.CoCo)
rm(list = ls())
p <- 2000; n <- 600 ; K <- 3; lb <- 0.4; ub <- 0.4; v <- 4
PP <- 0.2
gama<-0.05
library(MASS); library(mvtnorm); library(quantreg); library(ACE.CoCo)
berlii <- rbinom(p, 1, PP)
index0 <- which(berlii == 0); index1 <- which(berlii == 1)
true_pai1 <- length(index1)/p
mu <- matrix(rep(0, 1*p), nrow=p)
mu[index1] <- runif(length(index1), min=lb, max=ub)
X <- matrix(rep(0, n*p), nrow=p)
B <- matrix(runif(K*p, min=-1, max=1), nrow=p)
t_error <- t(rmvt(n, sigma = diag(p), df = 10))########
for (i in 1:n){
f <- t(rmvt(1, sigma = diag(K), df = v))/sqrt(v/(v-2))
X[,i] <- mu + B %*% f + t_error[,i]#
}
Xba <- apply(X,1,mean)
boxplot(Xba)
setwd("D:/R/shengxinfenxi/Multi-Omics/TME_Microbiota-main/TME_Microbiota-main/Rdata")
install.packages("phyloseq")
